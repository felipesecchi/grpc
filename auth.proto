syntax="proto3";
package pb;
import "google/protobuf/empty.proto";

option go_package = "github.com/tradersclub/TCAuth/pb";

message SessionRequest {
    string token = 1;
    string userId = 2;
    string deviceId = 3;
    string roles = 4;

    message TeamMember {
        string TeamId = 1;
        string UserId = 2;
        string Roles = 3;
        int64 DeleteAt = 4;
    }
    
    repeated TeamMember TeamMembers = 5;
}
message SessionResponse {
    string id = 1;
    string token = 2;
    int64 createAt = 3;
    int64 expiresAt = 4;
    int64 lastActivityAt = 5;
    string userId = 6;
    string deviceId = 7;
    string roles = 8;
    bool IsOAuth = 9;
    int64 DeleteAt = 10;
    map<string, string> Props = 11;

    message TeamMember {
        string TeamId = 1;
        string UserId = 2;
        string Roles = 3;
        int64 DeleteAt = 4;
    }

    repeated TeamMember TeamMembers = 12;

}

message SessionIs {
    string roles = 1;
    string roleIs = 2;
    bool ok = 3;
}

message JWTResponse {
    string token = 1;
    string redirectTo = 2;
    SessionResponse SessionResponse = 3; 
}

message JWTRequest {
    string token = 1;
    string userId = 2;
    string redirectTo = 3;
}

message RevokeSessionRequest {
    string userId = 1;
}

service AuthService {
    rpc GetSession(SessionRequest) returns (SessionResponse) {};
    rpc Is(SessionIs) returns (SessionIs) {};
    rpc CreateSession(SessionRequest) returns (SessionResponse) {};
    rpc RevokeSession(SessionRequest) returns (google.protobuf.Empty) {};
    rpc UpdateLastActivity(SessionRequest) returns (google.protobuf.Empty) {};
    rpc CreateJWTToMagicLink(JWTRequest) returns (JWTResponse) {};
    rpc ValidateJWTToMagicLink(JWTRequest) returns (JWTResponse) {};
    rpc RevokeAllSessionsByUser(SessionRequest) returns (google.protobuf.Empty) {};
    rpc RevokeAllSessionsByUserID(RevokeSessionRequest) returns (google.protobuf.Empty) {};
}